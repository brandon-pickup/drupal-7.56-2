<?php

/**
 * @file
 * Commerce PayGate PayHost.
 */

use Drupal\commerce_paygate_payhost\Payment\PaymentStatusInterface;

/**
 * Name of payment method.
 */
define('COMMERCE_PAYGATE_PAYHOST_PAYMENT_METHOD', 'commerce_paygate_payhost');
/**
 * Name of instances of payment method.
 */
define('COMMERCE_PAYGATE_PAYHOST_PAYMENT_METHOD_INSTANCE', sprintf('%s|commerce_payment_%1$s', COMMERCE_PAYGATE_PAYHOST_PAYMENT_METHOD));

/**
 * Convert PayGate transaction statuses depending on gateway configuration.
 *
 * @param string $status
 *   Actual status, returned by PayGate.
 * @param array $payment_method
 *   An instance of payment method.
 *
 * @return string
 *   Processed transaction status.
 */
function commerce_paygate_payhost_convert_transaction_status($status, array $payment_method) {
  if (empty($payment_method['instance_id'])) {
    throw new \InvalidArgumentException(sprintf('You must pass an instance of payment method to the "%s".', __FUNCTION__));
  }

  $status = strtolower($status);

  if (!empty($payment_method['settings']['auto_settlement_disabled']) && PaymentStatusInterface::APPROVED === $status) {
    $status = PaymentStatusInterface::AUTHORISED;
  }

  return $status;
}
